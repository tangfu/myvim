" =============================================================================
"      FileName: myvimrc
"          Desc: vim配置
"        Author: tangfu
"         Email: abctfq2008@gmail.com
"      HomePage: https://github.com/tangfu/myvim
"       Version: 0.0.1
"    LastChange: 2012-05-03 10:12:30
" =============================================================================
source ~/.myvim/pathogen.vim
call pathogen#runtime_append_all_bundles()
call pathogen#infect('~/.myvim')
call pathogen#helptags()


" project
set nocompatible
let g:proj_flags="gist"


" 开启插件功能
filetype plugin indent on
set completeopt=longest,menu

syntax on
syntax enable
set autoindent
set number
set mouse=a


" 开启代码折叠
set foldmethod=syntax
set foldlevel=100

" 设置tags
set tags=tags;
set autochdir


" vimim
let g:vimim_shuangpin='abc'
let g:vimim_cloud='sogou'
let g:vimim_toggle='sogou,pinyin'
" let g:vimim_map='c-space'


" txtbrowser
au BufEnter *.txt setlocal ft=txt
let TxtBrowser_Dict_Url = 'http://dict.cn/text'
let Txtbrowser_Search_Engine='http://www.baidu.com/s?wd=text&oq=text&f=3&rsp=2'
" 重新映射txtbrowser中的快捷键：ts － 搜索单词；tf － 查单词；tg － 打开链接
map ts <leader>s
map tf <leader>f
map tg <leader>g


" w3m
let g:w3m#search_engine = 'http://www.baidu.com/s?ie=' . &encoding . '&wd='
let g:w3m#homepage = "http://www.google.com/"


" vim-pandoc
map <leader>h :%!pandoc -f markdown -t html -s<CR>
let g:pandoc_auto_format = 1
let g:pandoc_no_padding = 1


" 设置NERDTree插件
nmap <F7> :NERDTreeToggle<CR>
"设置NERDTree子窗口宽度
let NERDTreeWinSize=20
"设置NERDTree子窗口位置
let NERDTreeWinPos="right"


" bookmarking
map <silent> bb :ToggleBookmark<CR>
map <silent> bn :NextBookmark<CR>
map <silent> bp :PreviousBookmark<CR>


" fencview
set encoding=utf-8
set langmenu=zh_CN.UTF-8
language message zh_CN.UTF-8
set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1
"let g:fencview_autodetect=1
"let g:fencview_checklines = 10
map <F3> :FencAutoDetect<cr>


" ZoomWin
map <F8> :ZoomWin<cr>


" wordpress
let VIMPRESS=[{'blog_url':'http://rain.orgfree.com'
	    \,'username':'tangfu',
	    \}]


" doxygen setting
let g:DoxygenToolkit_authorName="tangfu - abctangfuqiang2008@163.com"
let g:DoxygenToolkit_licenseTag="UESTC\<enter>"
let g:DoxygenToolkit_briefTag_funcName="yes"
let g:DoxygenToolkit_briefTag_pre="@brief\t"
let g:DoxygenToolkit_paramTag_pre="@param\t"
let g:DoxygenToolkit_returnTag="@return\t"
let g:DoxygenToolkit_maxFunctionProtoLines=30
let g:doxygen_enhanced_color=1


" authorinfo setting
let g:vimrc_author='tangfu'
let g:vimrc_email='abctangfuqiang2008@163.com'
let g:vimrc_homepage="http://rain.orgfree.com"
nmap <F6> :AuthorInfoDetect<cr>


" DoxAuthor Dox DoxBlock三个命令的快捷操作
map <F2>a : DoxAuthor<CR>
map <F2>f : Dox<CR>
map <F2>b : DoxBlock<CR>
map <F2>c O///


" Loadtemplate载入模板的快捷操作
map lt :LoadTemplate<cr>


" winmanager插件
let g:winManagerWindowLayout='FileExplorer|TagList'
nmap wm :WMToggle<cr>


" Taglist插件
let Tlist_Show_One_File=1
let Tlist_Exit_OnlyWindow=1
nmap wt :Tlist<cr>


" TABBAR 插件
let g:Tb_UseSingleClick = 1
map <F5> :bdelete<CR>


" a.vim和grep.vim插件
nnoremap <silent> <F4> :A<CR>
" nnoremap <silent> <F3> :Grep<CR>


" Calendar
map <leader>rl :Calendar<CR>

" plugin - NERD_commenter.vim	注释代码用的，
" " [count],cc 光标以下count行逐行添加注释(7,cc)
" " [count],cu 光标以下count行逐行取消注释(7,cu)
" " [count],cm 光标以下count行尝试添加块注释(7,cm)
" " ,cA 在行尾插入 /* */,并且进入插入模式。 这个命令方便写注释。
" " 注：count参数可选，无则默认为选中行或当前行
" "-----------------------------------------------------------------
let NERDSpaceDelims=1       " 让注释符与语句之间留一个空格
let NERDCompactSexyComs=1   " 多行注释时样子更好看


" word_complete.vim自动加载补全模式（补全单词）
" :autocmd BufEnter * call DoWordComplete() 

" sketch插件，开启后在vim中可以用鼠标绘图，再次按F4关闭
" map <F4> :call ToggleSketch()<CR>

" 不要用空格代替制表符
set noexpandtab

" 高亮显示匹配的括号
set showmatch

" 为C程序提供自动缩进
set smartindent

"突出显示当前行
set cursorline

" 统一缩进为4
set softtabstop=4
set shiftwidth=4

" 在处理未保存或只读文件的时候，弹出确认 
set confirm

" 删除除当前窗口外的所有缓存
map <leader>bda :call DeleteAllBuffersInWindow()<cr>
fun! DeleteAllBuffersInWindow()
    let s:curWinNr = winnr()
    if winbufnr(s:curWinNr) == 1
        ret
    endif
    let s:curBufNr = bufnr("%")
    exe "bn"
    let s:nextBufNr = bufnr("%")
    while s:nextBufNr != s:curBufNr
        exe "bn"
        exe "bdel ".s:nextBufNr
        let s:nextBufNr = bufnr("%")
    endwhile
endfun

" C的编译和运行
" map <F5> :call CompileRunGcc()<CR>
func! CompileRunGcc()
    exec "w"
    exec "!gcc % -g -Wall -o %<"
    exec "! ./%<"
endfunc

map <F9> :call Do_CsTag()<CR>
nmap <C-@>s :cs find s <C-R>=expand("<cword>")<CR><CR>:copen<CR>
nmap <C-@>g :cs find g <C-R>=expand("<cword>")<CR><CR>
nmap <C-@>c :cs find c <C-R>=expand("<cword>")<CR><CR>:copen<CR>
nmap <C-@>t :cs find t <C-R>=expand("<cword>")<CR><CR>:copen<CR>
nmap <C-@>e :cs find e <C-R>=expand("<cword>")<CR><CR>:copen<CR>
nmap <C-@>f :cs find f <C-R>=expand("<cfile>")<CR><CR>:copen<CR>
nmap <C-@>i :cs find i ^<C-R>=expand("<cfile>")<CR>$<CR>:copen<CR>
nmap <C-@>d :cs find d <C-R>=expand("<cword>")<CR><CR>:copen<CR>
function Do_CsTag()
    let dir = getcwd()
    if filereadable("tags")
        if(g:iswindows==1)
            let tagsdeleted=delete(dir."\\"."tags")
        else
            let tagsdeleted=delete("./"."tags")
        endif
        if(tagsdeleted!=0)
            echohl WarningMsg | echo "Fail to do tags! I cannot delete the tags" | echohl None
            return
        endif
    endif
    if has("cscope")
        silent! execute "cs kill -1"
    endif
    if filereadable("cscope.files")
        if(g:iswindows==1)
            let csfilesdeleted=delete(dir."\\"."cscope.files")
        else
            let csfilesdeleted=delete("./"."cscope.files")
        endif
        if(csfilesdeleted!=0)
            echohl WarningMsg | echo "Fail to do cscope! I cannot delete the cscope.files" | echohl None
            return
        endif
    endif
    if filereadable("cscope.out")
        if(g:iswindows==1)
            let csoutdeleted=delete(dir."\\"."cscope.out")
        else
            let csoutdeleted=delete("./"."cscope.out")
        endif
        if(csoutdeleted!=0)
            echohl WarningMsg | echo "Fail to do cscope! I cannot delete the cscope.out" | echohl None
            return
        endif
    endif
    if(executable('ctags'))
        "silent! execute "!ctags -R --c-types=+p --fields=+S *"
        silent! execute "!ctags -R --c++-kinds=+p --fields=+iaS --extra=+q ."
    endif
    if(executable('cscope') && has("cscope") )
        if(g:iswindows!=1)
            silent! execute "!find . -name '*.h' -o -name '*.c' -o -name '*.cpp' -o -name '*.java' -o -name '*.cs' > cscope.files"
        else
            silent! execute "!dir /s/b *.c,*.cpp,*.h,*.java,*.cs >> cscope.files"
        endif
        silent! execute "!cscope -b"
        execute "normal :"
        if filereadable("cscope.out")
            execute "cs add cscope.out"
        endif
    endif
endfunction
